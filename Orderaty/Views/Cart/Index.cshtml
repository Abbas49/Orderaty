@model List<Orderaty.Models.CartItem>

@{
    ViewData["Title"] = "Shopping Cart";
}

@section Styles {
    <link rel="stylesheet" href="~/css/cart.css" />
}

<section class="cart-section">
    <!-- Cart Header -->
    <div class="cart-header">
        <div class="cart-header-content">
            <h1 class="cart-title">Shopping Cart</h1>
            <p class="cart-subtitle">@Model.Count() items in your cart</p>
        </div>
    </div>

    <div class="cart-container">
        @if (!Model.Any())
        {
            <!-- Empty Cart State -->
            <div class="empty-cart">
                <i class="fas fa-shopping-cart"></i>
                <h2 class="empty-cart-title">Your cart is empty</h2>
                <p class="empty-cart-text">Looks like you haven't added anything to your cart yet.</p>
                <a href="@Url.Action("Index", "ClientProduct")" class="browse-btn">
                    Browse Products
                </a>
            </div>
        }
        else
        {
            <!-- Cart Content Grid -->
            <div class="cart-content">
                <!-- Cart Items Section -->
                <div class="cart-items-section">
                    <div class="cart-items-list">
                        @foreach (var item in Model)
                        {
                            <div class="cart-item">
                                <!-- Product Image -->
                                <div class="cart-item-image">
                                    <img src="~/images/products/@item.Product.Image" 
                                         alt="@item.Product.Name" />
                                </div>

                                <!-- Product Details -->
                                <div class="cart-item-details">
                                    <h3 class="cart-item-name">@item.Product.Name</h3>
                                    <p class="cart-item-store">
                                        <i class="fas fa-store"></i>
                                        @item.Product.Seller.User.FullName
                                    </p>
                                    <p class="cart-item-price">@item.Product.Price.ToString("0.00") EGP</p>
                                </div>

                                <!-- Actions -->
                                <div class="cart-item-actions">
                                    <!-- Quantity Control -->
                                    <div class="quantity-control">
                                        <button class="quantity-btn" onclick="updateQuantity(@item.Id, -1)">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <span class="quantity-value" id="quantity-@item.Id">@item.Quantity</span>
                                        <button class="quantity-btn" onclick="updateQuantity(@item.Id, 1)">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>

                                    <!-- Item Total -->
                                    <span class="item-total" id="total-@item.Id">
                                        @((item.Product.Price * item.Quantity).ToString("0.00")) EGP
                                    </span>

                                    <!-- Remove Button -->
                                    <form asp-action="Remove" asp-controller="Cart" method="post" style="margin: 0;">
                                        <input type="hidden" name="id" value="@item.Id" />
                                        <button type="submit" class="remove-btn">
                                            <i class="fas fa-trash"></i>
                                            Remove
                                        </button>
                                    </form>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Order Summary Section -->
                <div class="order-summary">
                    <h2 class="summary-title">Order Summary</h2>

                    <!-- Coupon Section -->
                    <div class="coupon-section">
                        <label class="coupon-label">Have a coupon?</label>
                        <div class="coupon-input-group">
                            <input type="text" 
                                   class="coupon-input" 
                                   placeholder="Enter code" />
                            <button class="apply-btn">Apply</button>
                        </div>
                    </div>

                    <!-- Delivery Options -->
                    <div class="delivery-section">
                        <label class="delivery-label">Delivery Option</label>
                        <div class="delivery-options">
                            <div class="delivery-option active" onclick="selectDelivery(this, 2.99)">
                                <div class="delivery-option-content">
                                    <div class="delivery-radio"></div>
                                    <div class="delivery-info">
                                        <span class="delivery-type">Standard (20-30 min)</span>
                                    </div>
                                </div>
                                <span class="delivery-price">2.99 EGP</span>
                            </div>
                            <div class="delivery-option" onclick="selectDelivery(this, 5.99)">
                                <div class="delivery-option-content">
                                    <div class="delivery-radio"></div>
                                    <div class="delivery-info">
                                        <span class="delivery-type">Express (10-15 min)</span>
                                    </div>
                                </div>
                                <span class="delivery-price">5.99 EGP</span>
                            </div>
                        </div>
                    </div>

                    <!-- Summary Details -->
                    <div class="summary-details">
                        <div class="summary-row">
                            <span class="summary-label">Subtotal</span>
                            <span class="summary-value" id="subtotal">
                                @Model.Sum(x => x.Product.Price * x.Quantity).ToString("0.00") EGP
                            </span>
                        </div>
                        <div class="summary-row">
                            <span class="summary-label">Delivery Fee</span>
                            <span class="summary-value" id="delivery-fee">2.99 EGP</span>
                        </div>
                    </div>

                    <!-- Total -->
                    <div class="summary-total">
                        <span class="total-label">Total</span>
                        <span class="total-value" id="total-amount">
                            @((Model.Sum(x => x.Product.Price * x.Quantity) + 2.99m).ToString("0.00")) EGP
                        </span>
                    </div>

                    <!-- Checkout Button -->
                    <form asp-action="Checkout" asp-controller="Order" method="post">
                        <button type="submit" class="checkout-btn">
                            Proceed to Checkout
                            <i class="fas fa-arrow-right"></i>
                        </button>
                    </form>
                </div>
            </div>
        }
    </div>
</section>

@section Scripts {
    <script>
        // Update quantity
        function updateQuantity(itemId, change) {
            const quantityElement = document.getElementById(`quantity-${itemId}`);
            const totalElement = document.getElementById(`total-${itemId}`);
            let currentQuantity = parseInt(quantityElement.textContent);
            let newQuantity = currentQuantity + change;

            if (newQuantity < 1) {
                newQuantity = 1;
            }

            quantityElement.textContent = newQuantity;
            
            // Update totals (you may want to implement AJAX call to update server)
            updateCartTotals();
        }

        // Select delivery option
        function selectDelivery(element, price) {
            // Remove active class from all options
            document.querySelectorAll('.delivery-option').forEach(option => {
                option.classList.remove('active');
            });
            
            // Add active class to selected option
            element.classList.add('active');
            
            // Update delivery fee
            document.getElementById('delivery-fee').textContent = `$${price.toFixed(2)}`;
            
            // Update total
            updateCartTotals();
        }

        // Update cart totals
        function updateCartTotals() {
            let subtotal = 0;
            
            // Calculate subtotal from all items
            @foreach (var item in Model)
            {
                <text>
                const quantity@(item.Id) = parseInt(document.getElementById('quantity-@item.Id').textContent);
                const price@(item.Id) = @item.Product.Price;
                const itemTotal@(item.Id) = quantity@(item.Id) * price@(item.Id);
                document.getElementById('total-@item.Id').textContent = `$${itemTotal@(item.Id).toFixed(2)}`;
                subtotal += itemTotal@(item.Id);
                </text>
            }
            
            // Update subtotal
            document.getElementById('subtotal').textContent = `$${subtotal.toFixed(2)}`;
            
            // Get delivery fee
            const deliveryFeeText = document.getElementById('delivery-fee').textContent;
            const deliveryFee = parseFloat(deliveryFeeText.replace('$', ''));
            
            // Update total
            const total = subtotal + deliveryFee;
            document.getElementById('total-amount').textContent = `$${total.toFixed(2)}`;
        }
    </script>
}

