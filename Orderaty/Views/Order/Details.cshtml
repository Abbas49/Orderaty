@model Orderaty.Models.Order

@{
    ViewData["Title"] = "Order Details - #" + Model.Id.ToString("D5");
}

@section Styles {
    <link rel="stylesheet" href="~/css/order-details.css" asp-append-version="true" />
}

<section class="order-details-section">
    <!-- Order Header -->
    <div class="order-details-header">
        <div class="order-details-header-content">
            <div class="header-main">
                <a href="@Url.Action("History", "Order")" class="back-link">
                    <i class="fas fa-arrow-left"></i>
                    Back to Orders
                </a>
                <h1 class="order-details-title">Order #@Model.Id.ToString("D5")</h1>
                <span class="order-status-badge status-@Model.Status.ToString().ToLower()">
                    <i class="fas @GetStatusIcon(Model.Status)"></i>
                    @GetStatusText(Model.Status)
                </span>
            </div>
            <div class="header-meta">
                <span class="order-date">
                    <i class="fas fa-calendar"></i>
                    Ordered on @Model.CreatedAt.ToString("MMMM d, yyyy 'at' h:mm tt")
                </span>
            </div>
        </div>
    </div>

    <div class="order-details-container">
        <div class="order-details-grid">
            
            <!-- Main Content Area -->
            <div class="order-main-content">
                
                <!-- Order Progress Tracker -->
                @if (Model.Status != Orderaty.Models.OrderStatus.Cancelled)
                {
                    <div class="order-progress-card">
                        <h2 class="card-title">Order Progress</h2>
                        <div class="progress-tracker">
                            <div class="progress-step @(GetStepStatus(1, Model.Status))">
                                <div class="step-icon">
                                    <i class="fas fa-receipt"></i>
                                </div>
                                <div class="step-info">
                                    <div class="step-title">Order Placed</div>
                                    <div class="step-time">@Model.CreatedAt.ToString("MMM d, h:mm tt")</div>
                                </div>
                            </div>
                            <div class="progress-line @(GetLineStatus(1, Model.Status))"></div>

                            <div class="progress-step @(GetStepStatus(2, Model.Status))">
                                <div class="step-icon">
                                    <i class="fas fa-clock"></i>
                                </div>
                                <div class="step-info">
                                    <div class="step-title">Processing</div>
                                    @if (Model.Status >= Orderaty.Models.OrderStatus.Processing)
                                    {
                                        <div class="step-time">@Model.CreatedAt.AddMinutes(5).ToString("MMM d, h:mm tt")</div>
                                    }
                                </div>
                            </div>
                            <div class="progress-line @(GetLineStatus(2, Model.Status))"></div>

                            <div class="progress-step @(GetStepStatus(3, Model.Status))">
                                <div class="step-icon">
                                    <i class="fas fa-truck"></i>
                                </div>
                                <div class="step-info">
                                    <div class="step-title">Shipped</div>
                                    @if (Model.Status >= Orderaty.Models.OrderStatus.Shipped)
                                    {
                                        <div class="step-time">@Model.CreatedAt.AddMinutes(15).ToString("MMM d, h:mm tt")</div>
                                    }
                                </div>
                            </div>
                            <div class="progress-line @(GetLineStatus(3, Model.Status))"></div>

                            <div class="progress-step @(GetStepStatus(4, Model.Status))">
                                <div class="step-icon">
                                    <i class="fas fa-check-circle"></i>
                                </div>
                                <div class="step-info">
                                    <div class="step-title">Delivered</div>
                                    @if (Model.Status == Orderaty.Models.OrderStatus.Delivered)
                                    {
                                        <div class="step-time">@Model.CreatedAt.AddMinutes(25).ToString("MMM d, h:mm tt")</div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="order-cancelled-card">
                        <i class="fas fa-times-circle"></i>
                        <h3>Order Cancelled</h3>
                        <p>This order was cancelled on @Model.CreatedAt.ToString("MMMM d, yyyy")</p>
                    </div>
                }

                <!-- Order Items -->
                <div class="order-items-card">
                    <h2 class="card-title">Order Items (@Model.OrderedItems.Count @(Model.OrderedItems.Count == 1 ? "item" : "items"))</h2>
                    <div class="items-list">
                        @foreach (var item in Model.OrderedItems)
                        {
                            <div class="order-item">
                                <div class="item-image-wrapper">
                                    @if (!string.IsNullOrEmpty(item.Product.Image))
                                    {
                                        <img src="~/images/products/@item.Product.Image" alt="@item.Product.Name" class="item-image">
                                    }
                                    else
                                    {
                                        <img src="~/images/default-product.png" alt="No Image" class="item-image">
                                    }
                                </div>
                                <div class="item-details">
                                    <h3 class="item-name">@item.Product.Name</h3>
                                    <p class="item-description">@item.Product.Description</p>
                                    <div class="item-quantity">Quantity: @item.Quantity</div>
                                </div>
                                <div class="item-price">
                                    <div class="item-unit-price">@item.Product.Price.ToString("C2") each</div>
                                    <div class="item-total-price">@((item.Product.Price * item.Quantity).ToString("C2"))</div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

            </div>

            <!-- Sidebar -->
            <div class="order-sidebar">
                
                <!-- Order Summary -->
                <div class="summary-card">
                    <h2 class="card-title">Order Summary</h2>
                    <div class="summary-content">
                        <div class="summary-row">
                            <span class="summary-label">Subtotal</span>
                            <span class="summary-value">@Model.OrderedItems.Sum(oi => oi.Product.Price * oi.Quantity).ToString("C2")</span>
                        </div>
                        <div class="summary-row">
                            <span class="summary-label">Delivery Fee</span>
                            <span class="summary-value">$0.00</span>
                        </div>
                        @if (Model.Coupon != null)
                        {
                            <div class="summary-row discount">
                                <span class="summary-label">
                                    <i class="fas fa-tag"></i>
                                    Discount (@Model.Coupon.Code)
                                </span>
                                <span class="summary-value">-@Model.Coupon.DiscountValue.ToString("C2")</span>
                            </div>
                        }
                        <div class="summary-divider"></div>
                        <div class="summary-row total">
                            <span class="summary-label">Total</span>
                            <span class="summary-value">@Model.TotalPrice.ToString("C2")</span>
                        </div>
                    </div>
                </div>

                <!-- Store Information -->
                <div class="store-info-card">
                    <h2 class="card-title">Store Information</h2>
                    <div class="store-content">
                        <div class="store-header">
                            <i class="fas fa-store"></i>
                            <div class="store-details">
                                <h3 class="store-name">@Model.Seller.User.FullName</h3>
                                <p class="store-category">@Model.Seller.Category.ToString().Replace("_", " ")</p>
                            </div>
                        </div>
                        <a href="@Url.Action("Details", "Seller", new { id = Model.SellerId })" class="visit-store-btn">
                            Visit Store
                            <i class="fas fa-arrow-right"></i>
                        </a>
                    </div>
                </div>

                <!-- Delivery Information -->
                @if (Model.Delivery != null)
                {
                    <div class="delivery-info-card">
                        <h2 class="card-title">Delivery Information</h2>
                        <div class="delivery-content">
                            <div class="delivery-person">
                                <i class="fas fa-user-circle"></i>
                                <div class="delivery-details">
                                    <h3 class="delivery-name">@Model.Delivery.User.FullName</h3>
                                    <p class="delivery-phone">@Model.Delivery.User.PhoneNumber</p>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <!-- Order Actions -->
                <div class="order-actions-card">
                    @if (Model.Status == Orderaty.Models.OrderStatus.Delivered)
                    {
                        <button class="action-btn primary-action" onclick="window.location.href='@Url.Action("Details", "Seller", new { id = Model.SellerId })'">
                            <i class="fas fa-star"></i>
                            Write a Review
                        </button>
                        <form asp-action="Checkout" asp-controller="Order" method="post" style="width: 100%;">
                            <button type="button" class="action-btn secondary-action" onclick="reorder()">
                                <i class="fas fa-redo"></i>
                                Reorder Items
                            </button>
                        </form>
                    }
                    @if (Model.Status == Orderaty.Models.OrderStatus.PendingDelivery || Model.Status == Orderaty.Models.OrderStatus.Processing)
                    {
                        <button class="action-btn danger-action">
                            <i class="fas fa-times"></i>
                            Cancel Order
                        </button>
                    }
                    <button class="action-btn outline-action" onclick="window.print()">
                        <i class="fas fa-print"></i>
                        Print Receipt
                    </button>
                </div>

            </div>

        </div>
    </div>
</section>

@section Scripts {
    <script>
        function reorder() {
            alert('Reorder functionality coming soon!');
        }
    </script>
}

@functions {
    string GetStatusIcon(Orderaty.Models.OrderStatus status)
    {
        return status switch
        {
            Orderaty.Models.OrderStatus.PendingDelivery => "fa-clock",
            Orderaty.Models.OrderStatus.Processing => "fa-spinner",
            Orderaty.Models.OrderStatus.Shipped => "fa-truck",
            Orderaty.Models.OrderStatus.Delivered => "fa-check-circle",
            Orderaty.Models.OrderStatus.Cancelled => "fa-times-circle",
            _ => "fa-circle"
        };
    }

    string GetStatusText(Orderaty.Models.OrderStatus status)
    {
        return status switch
        {
            Orderaty.Models.OrderStatus.PendingDelivery => "Pending Delivery",
            Orderaty.Models.OrderStatus.Processing => "Processing",
            Orderaty.Models.OrderStatus.Shipped => "Out for Delivery",
            Orderaty.Models.OrderStatus.Delivered => "Delivered",
            Orderaty.Models.OrderStatus.Cancelled => "Cancelled",
            _ => status.ToString()
        };
    }

    string GetStepStatus(int step, Orderaty.Models.OrderStatus status)
    {
        int currentStep = status switch
        {
            Orderaty.Models.OrderStatus.PendingDelivery => 1,
            Orderaty.Models.OrderStatus.Processing => 2,
            Orderaty.Models.OrderStatus.Shipped => 3,
            Orderaty.Models.OrderStatus.Delivered => 4,
            _ => 0
        };

        if (step < currentStep) return "completed";
        if (step == currentStep) return "active";
        return "pending";
    }

    string GetLineStatus(int lineNumber, Orderaty.Models.OrderStatus status)
    {
        int currentStep = status switch
        {
            Orderaty.Models.OrderStatus.PendingDelivery => 1,
            Orderaty.Models.OrderStatus.Processing => 2,
            Orderaty.Models.OrderStatus.Shipped => 3,
            Orderaty.Models.OrderStatus.Delivered => 4,
            _ => 0
        };

        return lineNumber < currentStep ? "completed" : "pending";
    }
}
